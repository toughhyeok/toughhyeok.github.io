I"3!<ul class="catalogue">

    <li class="catalogue-item">
    <a href="/2022-05-11/ruby-to_s">

        

        <!-- 업로드 후, 지난 날짜 계산. 일주일 이내에 포스트 라면 New 태그 등록 -->
        
        
        
        

        <!-- draft 상태일 떄는 New 태그 추가 안함 -->
        
        <span class="catalogue-tag">
            New
        </span>
        

        <p class="catalogue-type">
            ruby
        </p>
        <div class="catalogue-info transition">
            <h1 class="catalogue-title">
                ruby 객체 method to_s
            </h1>
            <p class="catalogue-sub">
                
            </p>

            
            <p class="catalogue-body">ruby는 모든 것이 객체로 이루어져 있다. 그리고 puts에 객체를 전달인자로 전달하면 다음과 같다. irb(main):002:0&gt;...</p>
            
        </div>
    </a>
</li>    

    <li class="catalogue-item">
    <a href="/2022-05-11/ruby-nokogiri-blog-content-crawling">

        

        <!-- 업로드 후, 지난 날짜 계산. 일주일 이내에 포스트 라면 New 태그 등록 -->
        
        
        
        

        <!-- draft 상태일 떄는 New 태그 추가 안함 -->
        
        <span class="catalogue-tag">
            New
        </span>
        

        <p class="catalogue-type">
            ruby
        </p>
        <div class="catalogue-info transition">
            <h1 class="catalogue-title">
                tstory 블로그 크롤링
            </h1>
            <p class="catalogue-sub">
                
            </p>

            
            <p class="catalogue-body">아래 test_blog_html_parser.rb 는 nokogiri 모듈을 이용해 만들어 본 tstory용 blog-content-crawler 이다.. 실행 방법은 ruby test_blog_html_parser.rb "https://hotamul.tistory.com/113"로 해보면 실행한...</p>
            
        </div>
    </a>
</li>    

    <li class="catalogue-item">
    <a href="/2022-05-11/ruby-interesting-class">

        

        <!-- 업로드 후, 지난 날짜 계산. 일주일 이내에 포스트 라면 New 태그 등록 -->
        
        
        
        

        <!-- draft 상태일 떄는 New 태그 추가 안함 -->
        
        <span class="catalogue-tag">
            New
        </span>
        

        <p class="catalogue-type">
            ruby
        </p>
        <div class="catalogue-info transition">
            <h1 class="catalogue-title">
                재미있는 ruby 클래스
            </h1>
            <p class="catalogue-sub">
                
            </p>

            
            <p class="catalogue-body">Class class Greeter def initialize(name = "World") @name = name end def say_hi puts "Hi #{@name}!" end def say_bye...</p>
            
        </div>
    </a>
</li>    

    <li class="catalogue-item">
    <a href="/2022-05-11/ruby-attr-accesor-reader">

        

        <!-- 업로드 후, 지난 날짜 계산. 일주일 이내에 포스트 라면 New 태그 등록 -->
        
        
        
        

        <!-- draft 상태일 떄는 New 태그 추가 안함 -->
        
        <span class="catalogue-tag">
            New
        </span>
        

        <p class="catalogue-type">
            ruby
        </p>
        <div class="catalogue-info transition">
            <h1 class="catalogue-title">
                ruby Class 속성 접근자
            </h1>
            <p class="catalogue-sub">
                attr_reader attr_accessor
            </p>

            
            <p class="catalogue-body">ruby에 class의 getter, setter를 만드는 방법은 여러가지가 있다. Getter class...</p>
            
        </div>
    </a>
</li>    

    <li class="catalogue-item">
    <a href="/2022-05-10/ruby-naming-rule">

        

        <!-- 업로드 후, 지난 날짜 계산. 일주일 이내에 포스트 라면 New 태그 등록 -->
        
        
        
        

        <!-- draft 상태일 떄는 New 태그 추가 안함 -->
        
        <span class="catalogue-tag">
            New
        </span>
        

        <p class="catalogue-type">
            ruby
        </p>
        <div class="catalogue-info transition">
            <h1 class="catalogue-title">
                ruby naming rule
            </h1>
            <p class="catalogue-sub">
                ruby naming
            </p>

            
            <p class="catalogue-body">Example 변수, 클래스, 상수 이름    지역 변수 name fish_and_chips x_axis thx1138 &lt;code...</p>
            
        </div>
    </a>
</li>    

    <li class="catalogue-item">
    <a href="/2022-05-10/ruby-hash-constructor">

        

        <!-- 업로드 후, 지난 날짜 계산. 일주일 이내에 포스트 라면 New 태그 등록 -->
        
        
        
        

        <!-- draft 상태일 떄는 New 태그 추가 안함 -->
        
        <span class="catalogue-tag">
            New
        </span>
        

        <p class="catalogue-type">
            ruby
        </p>
        <div class="catalogue-info transition">
            <h1 class="catalogue-title">
                ruby Hash 클래스의 재미있는 사실!
            </h1>
            <p class="catalogue-sub">
                Hash constructor
            </p>

            
            <p class="catalogue-body"> Hashes have a default value that is returned when accessing keys that do not exist in the hash. If no default is set...</p>
            
        </div>
    </a>
</li>    

    <li class="catalogue-item">
    <a href="/2022-05-10/ruby-docs-ri">

        

        <!-- 업로드 후, 지난 날짜 계산. 일주일 이내에 포스트 라면 New 태그 등록 -->
        
        
        
        

        <!-- draft 상태일 떄는 New 태그 추가 안함 -->
        
        <span class="catalogue-tag">
            New
        </span>
        

        <p class="catalogue-type">
            ruby
        </p>
        <div class="catalogue-info transition">
            <h1 class="catalogue-title">
                ruby docs ri
            </h1>
            <p class="catalogue-sub">
                ruby docs
            </p>

            
            <p class="catalogue-body">끝내주는 Ruby Interactive (RI) 많은 루비 개발자들에게는 알려지지 않았지만, 루비는 언어의 API와 사용 가능한 모든 라이브러리를 참조할 수 있는 훌륭한 CUI(Composite User Interface)를...</p>
            
        </div>
    </a>
</li>    

    <li class="catalogue-item">
    <a href="/2022-05-09/integration-vue-springboot-debug">

        

        <!-- 업로드 후, 지난 날짜 계산. 일주일 이내에 포스트 라면 New 태그 등록 -->
        
        
        
        

        <!-- draft 상태일 떄는 New 태그 추가 안함 -->
        
        <span class="catalogue-tag">
            New
        </span>
        

        <p class="catalogue-type">
            vue.js
        </p>
        <div class="catalogue-info transition">
            <h1 class="catalogue-title">
                vue.js와 springboot 연동하기
            </h1>
            <p class="catalogue-sub">
                build &amp; debug
            </p>

            
            <p class="catalogue-body">Project Tree project_share_blog/src ├── main │   ├── java │   ├── resources │   └── view → Client module with Vue...</p>
            
        </div>
    </a>
</li>    

    <li class="catalogue-item">
    <a href="/2022-05-09/automation-npm-run-build">

        

        <!-- 업로드 후, 지난 날짜 계산. 일주일 이내에 포스트 라면 New 태그 등록 -->
        
        
        
        

        <!-- draft 상태일 떄는 New 태그 추가 안함 -->
        
        <span class="catalogue-tag">
            New
        </span>
        

        <p class="catalogue-type">
            gradle
        </p>
        <div class="catalogue-info transition">
            <h1 class="catalogue-title">
                gradle로 npm install &amp; npm run build 자동화
            </h1>
            <p class="catalogue-sub">
                view automatic deployment
            </p>

            
            <p class="catalogue-body">Gradle build 전에 npm run build 먼저 실행되도록 하기 plugins plugins { id...</p>
            
        </div>
    </a>
</li>    

</ul>
:ET