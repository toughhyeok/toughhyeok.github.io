I"p <h3 id="project-tree">Project Tree</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>project_share_blog/src
├── main
│   ├── java
│   ├── resources
│   └── view → Client module with Vue code
└── <span class="nb">test</span>
    ├── java
    └── resources
</code></pre></div></div>

<h3 id="vue-실행-방법">Vue 실행 방법</h3>

<p><code class="language-plaintext highlighter-rouge">./src/main/view/README.md</code> 참조</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd</span> ./src/main/view <span class="o">&amp;&amp;</span> npm <span class="nb">install</span>
</code></pre></div></div>

<p>View 모듈은 <code class="language-plaintext highlighter-rouge">npm</code>으로 관리됩니다.
<code class="language-plaintext highlighter-rouge">./src/main/view/package.json</code>에 모듈 목록 및 버전을 확인할 수 있습니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm run build
</code></pre></div></div>

<p>위 명령어는 <code class="language-plaintext highlighter-rouge">./src/main/view/src</code> 아래 생성된 <code class="language-plaintext highlighter-rouge">.vue</code>, <code class="language-plaintext highlighter-rouge">.css</code>, <code class="language-plaintext highlighter-rouge">.js</code> 그리고 이미지 파일들을 빌드해서 결과물을 <code class="language-plaintext highlighter-rouge">./src/main/resources/static</code> 디렉토리 아래에 저장합니다. 이 때 <code class="language-plaintext highlighter-rouge">.vue</code> 파일들은 모두 <code class="language-plaintext highlighter-rouge">.js</code> 파일로 변환됩니다.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm run serve
</code></pre></div></div>

<p>위 명령어는 개발 중일 때에만 사용합니다. <code class="language-plaintext highlighter-rouge">.vue</code> 파일들은 build 과정을 거쳐 <code class="language-plaintext highlighter-rouge">.js</code> 파일로 변환되어야 합니다. 개발 중에는 위 명령어를 통해서 실시간으로 vue 코드를 debug 할 수 있습니다. 현재 local 환경에서는 Tomcat은 8080 포트를 사용합니다. vue 또한 8080 포트를 기본으로 사용하므로 현재는 <strong>4000</strong> 포트를 사용하도록 되어 있습니다. VS Editor를 이용해 debug할 경우 반드시 <code class="language-plaintext highlighter-rouge">launch.json</code>를 반드시 수정해야합니다. (<code class="language-plaintext highlighter-rouge">package.json</code> 파일안에 <code class="language-plaintext highlighter-rouge">script</code>에서 포트를 변경할 수 있습니다. 포트 변경은 local 환경에 맞게 변경해도 상관 없습니다.)</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">//</span><span class="w"> </span><span class="err">.vscode/launch.json</span><span class="w">
</span><span class="p">{</span><span class="w">
    </span><span class="err">//</span><span class="w"> </span><span class="err">Use</span><span class="w"> </span><span class="err">IntelliSense</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">learn</span><span class="w"> </span><span class="err">about</span><span class="w"> </span><span class="err">possible</span><span class="w"> </span><span class="err">attributes.</span><span class="w">
    </span><span class="err">//</span><span class="w"> </span><span class="err">Hover</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">view</span><span class="w"> </span><span class="err">descriptions</span><span class="w"> </span><span class="err">of</span><span class="w"> </span><span class="err">existing</span><span class="w"> </span><span class="err">attributes.</span><span class="w">
    </span><span class="err">//</span><span class="w"> </span><span class="err">For</span><span class="w"> </span><span class="err">more</span><span class="w"> </span><span class="err">information</span><span class="p">,</span><span class="w"> </span><span class="err">visit:</span><span class="w"> </span><span class="err">https://go.microsoft.com/fwlink/?linkid=</span><span class="mi">830387</span><span class="w">
    </span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.2.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"configurations"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"pwa-chrome"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"request"</span><span class="p">:</span><span class="w"> </span><span class="s2">"launch"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Launch Chrome against localhost"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://localhost:4000"</span><span class="p">,</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="mi">8080</span><span class="w"> </span><span class="err">-&gt;</span><span class="w"> </span><span class="mi">4000</span><span class="w">
            </span><span class="nl">"webRoot"</span><span class="p">:</span><span class="w"> </span><span class="s2">"${workspaceFolder}"</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>무중단 배포를 위해서는 <code class="language-plaintext highlighter-rouge">build.gradle</code> 안에 script를 작성해서 <code class="language-plaintext highlighter-rouge">npm run build</code>를 실행시키도록 작성하면 됩니다. 순서는 <code class="language-plaintext highlighter-rouge">npm run build</code> 다음에 Springboot가 실행되어야 합니다.</p>

<h3 id="--개발-도중-cors-문제-발생-시-vueconfigjs-파일-devserver-수정-필요">🚨  개발 도중 CORS 문제 발생 시 <code class="language-plaintext highlighter-rouge">vue.config.js</code> 파일 <code class="language-plaintext highlighter-rouge">devServer</code> 수정 필요</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// vue.config.js</span>
<span class="kd">const</span> <span class="p">{</span> <span class="nx">defineConfig</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">@vue/cli-service</span><span class="dl">'</span><span class="p">)</span>
<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">defineConfig</span><span class="p">({</span>
  <span class="na">transpileDependencies</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="c1">// npm run build 타겟 디렉토리</span>
  <span class="na">outputDir</span><span class="p">:</span> <span class="dl">'</span><span class="s1">../resources/static</span><span class="dl">'</span><span class="p">,</span>

  <span class="c1">// npm run serve 개발 진행시에 포트가 다르기때문에 프록시 설정</span>
  <span class="na">devServer</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">proxy</span><span class="p">:</span> <span class="dl">'</span><span class="s1">http://localhost:8080</span><span class="dl">'</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre></div></div>
:ET