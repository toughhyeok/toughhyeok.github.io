I"u<p>이전 <a href="http://toughhyeok.github.io/2022-05-11/ruby-attr-accesor-reader">ruby Class 속성 접근자</a>에서 <code class="language-plaintext highlighter-rouge">attr_reader</code>, <code class="language-plaintext highlighter-rouge">attr_accessor</code>에 대해 알아보았다.</p>

<p>하지만 속성에 접근하는 메서드가 단지 객체의 인스턴스 변수를 읽거나 대입하는 간단한 메서드일 필요는 없다. <strong>가상 속성값을 인스턴스 변수에 매핑</strong>하는 방법을 알아보자.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">BookInStock</span>
    <span class="nb">attr_reader</span> <span class="ss">:isbn</span>
    <span class="nb">attr_accessor</span> <span class="ss">:price</span>
    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">isbn</span><span class="p">,</span> <span class="n">price</span><span class="p">)</span>
        <span class="vi">@isbn</span> <span class="o">=</span> <span class="n">isbn</span>
        <span class="vi">@price</span> <span class="o">=</span> <span class="no">Float</span><span class="p">(</span><span class="n">price</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="k">def</span> <span class="nf">price_in_cents</span>
        <span class="no">Integer</span><span class="p">(</span><span class="n">price</span><span class="o">*</span><span class="mi">100</span> <span class="o">+</span> <span class="mf">0.5</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="k">def</span> <span class="nf">price_in_cents</span><span class="o">=</span><span class="p">(</span><span class="n">cents</span><span class="p">)</span>
        <span class="vi">@price</span> <span class="o">=</span> <span class="n">cents</span> <span class="o">/</span> <span class="mf">100.0</span>
    <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>위와 같이 <code class="language-plaintext highlighter-rouge">price_in_cents</code>, <code class="language-plaintext highlighter-rouge">price_in_cents=</code> 메소드를 추가해 보자</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">book</span> <span class="o">=</span> <span class="no">BookInStock</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s1">'isbn1'</span><span class="p">,</span> <span class="mf">33.9</span><span class="p">)</span>
<span class="nb">puts</span> <span class="s2">"Price = </span><span class="si">#{</span><span class="n">book</span><span class="p">.</span><span class="nf">price</span><span class="si">}</span><span class="s2">"</span>
<span class="nb">puts</span> <span class="s2">"Price in cents = </span><span class="si">#{</span><span class="n">book</span><span class="p">.</span><span class="nf">price_in_cents</span><span class="si">}</span><span class="s2">"</span>

<span class="n">book</span><span class="p">.</span><span class="nf">price_in_cents</span> <span class="o">=</span> <span class="mi">1234</span>
<span class="nb">puts</span> <span class="s2">"Price = </span><span class="si">#{</span><span class="n">book</span><span class="p">.</span><span class="nf">price</span><span class="si">}</span><span class="s2">"</span>
<span class="nb">puts</span> <span class="s2">"Price in cents = </span><span class="si">#{</span><span class="n">book</span><span class="p">.</span><span class="nf">price_in_cents</span><span class="si">}</span><span class="s2">"</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">=&gt;</span> Price <span class="o">=</span> 33.9
<span class="o">=&gt;</span> Price <span class="k">in </span>cents <span class="o">=</span> 3390
<span class="o">=&gt;</span> Price <span class="o">=</span> 12.34
<span class="o">=&gt;</span> Price <span class="k">in </span>cents <span class="o">=</span> 1234
</code></pre></div></div>

<p>속성 메서드를 사용해서 가상 인스턴스 변수를 생성한다. 객체 밖에서는 <code class="language-plaintext highlighter-rouge">price_in_cents</code>는 다른 속성과 마찬가지로 그저 객체의 속성으로 보인다. 하지만 내부적으로는 이 속성에 대응하는 인스턴스 변수는 존재하지 않는다.</p>

<p><strong>이를 통해 인스턴스 변수와 계산된 값의 차이점을 숨겨서, 클래스 구현에서 나머지 세상을 보호할 수 있는 방법을 제공할 수 있다.</strong></p>
:ET